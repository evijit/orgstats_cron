name: Weekly Hub Snapshots Update

on:
  # Run the workflow once a week on Sunday at 05:00 UTC
  schedule:
    - cron: '0 5 * * 0'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  update_snapshots:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflow repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install huggingface_hub

      - name: Clone target Hugging Face repository
        run: |
          # Clone the destination repo to check for existing snapshots and add new ones
          git clone https://huggingface.co/datasets/hfmlsoc/hub_weekly_snapshots target_repo

      - name: Run snapshot generation script
        run: |
          # This script now uses the Hub API and doesn't clone the large source repo
          python hub_download.py ./target_repo

      - name: Commit and push new snapshots
        working-directory: ./target_repo
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add the token to the remote URL for the push operation
          git remote set-url origin https://huggingface-bot:${HF_TOKEN}@huggingface.co/datasets/hfmlsoc/hub_weekly_snapshots

          ITEMS="daily_papers datasets models spaces"
          PUSH_COUNT=0

          for item in $ITEMS; do
            if [ -d "$item" ]; then
              for week_dir in "$item"/*/; do
                # Check if the directory is untracked by git
                if ! git ls-files --error-unmatch "$week_dir" > /dev/null 2>&1; then
                  echo "New snapshot found: $week_dir. Preparing commit."
                  git add "$week_dir"
                  
                  dir_name=${week_dir%/}
                  COMMIT_MSG="feat(data): Add ${item} snapshot for week of ${dir_name#$item/}"
                  git commit -m "$COMMIT_MSG"
                  
                  echo "Pushing commit for $week_dir"
                  git push
                  
                  PUSH_COUNT=$((PUSH_COUNT + 1))
                fi
              done
            fi
          done

          if [ $PUSH_COUNT -eq 0 ]; then
            echo "No new weekly snapshots to push."
          else
            echo "Successfully pushed $PUSH_COUNT new snapshot(s)."
          fi