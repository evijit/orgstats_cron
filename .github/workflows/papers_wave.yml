name: Papers Processing - Single Wave

on:
  workflow_call:
    inputs:
      wave_number:
        required: true
        type: number
      total_papers:
        required: true
        type: number
      jobs_per_wave:
        required: true
        type: number
        default: 15

jobs:
  wave-setup:
    name: "Wave ${{ inputs.wave_number }} - Setup"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.split.outputs.matrix }}
      has_jobs: ${{ steps.split.outputs.has_jobs }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Calculate wave jobs
      id: split
      run: |
        MATRIX=$(python generate_matrix_wave.py ${{ inputs.total_papers }} ${{ inputs.wave_number }} ${{ inputs.jobs_per_wave }})
        echo "Wave ${{ inputs.wave_number }} Matrix: $MATRIX"
        
        # Check if matrix is empty
        if [ "$MATRIX" = "[]" ]; then
          echo "has_jobs=false" >> $GITHUB_OUTPUT
        else
          echo "has_jobs=true" >> $GITHUB_OUTPUT
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        fi

  wave-fetch:
    name: "Wave ${{ inputs.wave_number }} - Job ${{ matrix.job_id }}"
    needs: wave-setup
    if: needs.wave-setup.outputs.has_jobs == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        include: ${{ fromJson(needs.wave-setup.outputs.matrix) }}
      fail-fast: false
      max-parallel: ${{ inputs.jobs_per_wave }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Fetch citations for batch
      run: |
        python fetch_citations_batch.py ${{ matrix.start_idx }} ${{ matrix.end_idx }}

    - name: Upload batch artifact
      uses: actions/upload-artifact@v4
      with:
        name: citations-wave-${{ inputs.wave_number }}-batch-${{ matrix.job_id }}
        path: citations_batch_*.parquet
        retention-days: 7
