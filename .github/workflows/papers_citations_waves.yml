name: Papers Citations Processing (Waves)

on:
  workflow_dispatch:
    inputs:
      wave_number:
        description: 'Wave number (0-based, e.g., 0, 1, 2...)'
        required: true
        type: number
      jobs_per_wave:
        description: 'Number of jobs per wave'
        required: false
        type: number
        default: 15

jobs:
  setup-wave:
    name: "Setup Wave ${{ inputs.wave_number }}"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.split.outputs.matrix }}
      has_more: ${{ steps.split.outputs.has_more }}
      next_wave: ${{ steps.split.outputs.next_wave }}
      total_papers: ${{ steps.split.outputs.total_papers }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Calculate wave jobs
      id: split
      run: |
        # Fetch paper count
        PAPER_COUNT=$(python -c "from data_fetcher_papers import fetch_raw_data; df, _ = fetch_raw_data(); print(len(df))" 2>&1 | tail -1)
        echo "Total papers: $PAPER_COUNT"
        echo "total_papers=$PAPER_COUNT" >> $GITHUB_OUTPUT
        
        # Calculate jobs for this wave
        WAVE_NUM=${{ inputs.wave_number }}
        JOBS_PER_WAVE=${{ inputs.jobs_per_wave }}
        
        # Generate matrix for this specific wave
        MATRIX=$(python generate_matrix_wave.py $PAPER_COUNT $WAVE_NUM $JOBS_PER_WAVE)
        echo "Matrix for wave $WAVE_NUM: $MATRIX"
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        
        # Check if there are more waves needed
        PAPERS_PER_JOB=200
        TOTAL_JOBS=$(python -c "import math; print(math.ceil($PAPER_COUNT / $PAPERS_PER_JOB))")
        JOBS_PROCESSED=$(($WAVE_NUM * $JOBS_PER_WAVE + $JOBS_PER_WAVE))
        
        if [ $JOBS_PROCESSED -lt $TOTAL_JOBS ]; then
          echo "has_more=true" >> $GITHUB_OUTPUT
          echo "next_wave=$(($WAVE_NUM + 1))" >> $GITHUB_OUTPUT
        else
          echo "has_more=false" >> $GITHUB_OUTPUT
        fi

  fetch-citations-wave:
    name: "Fetch Citations Wave ${{ inputs.wave_number }} (Job ${{ matrix.job_id }})"
    needs: setup-wave
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max per job
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-wave.outputs.matrix) }}
      fail-fast: false
      max-parallel: ${{ inputs.jobs_per_wave }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Fetch citations for batch
      run: |
        python fetch_citations_batch.py ${{ matrix.start_idx }} ${{ matrix.end_idx }}

    - name: Upload batch artifact
      uses: actions/upload-artifact@v4
      with:
        name: citations-wave-${{ inputs.wave_number }}-batch-${{ matrix.job_id }}
        path: citations_batch_*.parquet
        retention-days: 7  # Keep for a week to allow all waves to complete

  report-wave-status:
    name: "Wave ${{ inputs.wave_number }} Status Report"
    needs: [setup-wave, fetch-citations-wave]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Report status
      run: |
        echo "Wave ${{ inputs.wave_number }} completed!"
        echo "Total papers: ${{ needs.setup-wave.outputs.total_papers }}"
        echo "Has more waves: ${{ needs.setup-wave.outputs.has_more }}"
        if [ "${{ needs.setup-wave.outputs.has_more }}" == "true" ]; then
          echo "Next wave to run: ${{ needs.setup-wave.outputs.next_wave }}"
          echo ""
          echo "To continue processing, manually trigger this workflow with:"
          echo "  wave_number: ${{ needs.setup-wave.outputs.next_wave }}"
        else
          echo "All waves complete! You can now run the merge workflow."
        fi
